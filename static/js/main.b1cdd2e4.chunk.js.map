{"version":3,"sources":["components/Loading.jsx","services/userAPI.js","pages/Login.jsx","components/Header.jsx","services/musicsAPI.js","components/MusicCard.jsx","services/favoriteSongsAPI.js","pages/Album.jsx","pages/Favorites.jsx","pages/NotFound.jsx","pages/Profile.jsx","pages/ProfileEdit.jsx","services/searchAlbumsAPI.js","pages/Search.jsx","routes/Routes.js","App.js","index.js"],"names":["Loading","Component","USER_KEY","saveUser","user","localStorage","setItem","JSON","stringify","simulateRequest","response","callback","setTimeout","getUser","Promise","resolve","parse","getItem","createUser","name","email","image","description","updateUser","updatedUser","Login","state","loginName","load","loginSave","onHandleChange","bind","onSubmitBtn","e","this","setState","target","value","a","preventDefault","to","htmlFor","type","id","onChange","disabled","length","onClick","Header","getUserAndRemoveLoad","then","getMusics","fetch","request","json","requestJson","results","MusicCard","props","trackId","trackName","previewUrl","isChecked","src","controls","kind","checked","FAVORITE_SONGS_KEY","readFavoriteSongs","saveFavoriteSongs","favoriteSongs","getFavoriteSongs","addSong","song","removeSong","filter","s","Album","dataAlbum","dataTracks","favoritesMusics","fetchMusics","onHandleChangeChecked","getFavorites","dataTrack","some","res","result","colId","window","location","pathname","replace","album","tracks","className","artistName","collectionName","artworkUrl100","alt","renderTracks","map","fav","Favorites","listFavorites","getFavMusics","removeTrack","data","NotFound","Profile","dataUsr","fetchUser","dataU","ProfileEdit","disable","updated","fetchUsr","onHandleChanger","isDisable","onHandleClick","match","exact","searchAlbumsAPI","artist","artistNameURL","encodeURI","replaceAll","getAlbumsAPI","APIResponse","artistId","collectionId","collectionPrice","releaseDate","trackCount","Search","nameSearched","searchInput","onHandleSearchClick","renderAlbums","query","idCol","placeholder","Routes","path","component","App","ThemeProvider","React","ReactDOM","render","basename","document","getElementById"],"mappings":"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","file":"static/js/main.b1cdd2e4.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class Loading extends Component {\n  render() {\n    return (\n      <div>\n        <h2>Carregando...</h2>\n      </div>\n    );\n  }\n}\n","const USER_KEY = 'user';\nconst TIMEOUT = 1500;\nconst SUCCESS_STATUS = 'OK';\n\nconst readUser = () => JSON.parse(localStorage.getItem(USER_KEY));\nconst saveUser = (user) => localStorage.setItem(USER_KEY, JSON.stringify(user));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso mais futuramente\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getUser = () => new Promise((resolve) => {\n  let user = readUser();\n  if (user === null) {\n    user = {};\n  }\n  simulateRequest(user)(resolve);\n});\n\nexport const createUser = (user) => new Promise((resolve) => {\n  const emptyUser = {\n    name: '',\n    email: '',\n    image: '',\n    description: '',\n  };\n  saveUser({ ...emptyUser, ...user });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const updateUser = (updatedUser) => new Promise((resolve) => {\n  saveUser({ ...updatedUser });\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport Loading from '../components/Loading';\nimport { createUser } from '../services/userAPI';\n\nexport default class Login extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loginName: '',\n      load: false,\n      loginSave: false,\n    };\n    this.onHandleChange = this.onHandleChange.bind(this);\n    this.onSubmitBtn = this.onSubmitBtn.bind(this);\n  }\n\n  onHandleChange(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async onSubmitBtn(e) {\n    const { loginName } = this.state;\n    e.preventDefault();\n    this.setState({\n      load: true,\n    });\n    await createUser({ name: loginName });\n    this.setState({\n      load: false,\n      loginSave: true,\n    });\n  }\n  // https://v5.reactrouter.com/web/api/Redirect\n\n  render() {\n    const { loginName, load, loginSave } = this.state;\n    const MINLETTERS = 3;\n    if (loginSave) return <Redirect to=\"/search\" />;\n    return (\n      <div data-testid=\"page-login\">\n        <h2>Login</h2>\n        <form>\n          <label htmlFor=\"login-input\">\n            Login:\n            <input\n              type=\"text\"\n              data-testid=\"login-name-input\"\n              id=\"login-input\"\n              value={ loginName }\n              name=\"loginName\"\n              onChange={ this.onHandleChange }\n            />\n          </label>\n          <button\n            type=\"submit\"\n            data-testid=\"login-submit-button\"\n            disabled={ loginName.length < MINLETTERS }\n            onClick={ this.onSubmitBtn }\n          >\n            Entrar\n          </button>\n          {(load) && <Loading /> }\n        </form>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { getUser } from '../services/userAPI';\nimport Loading from './Loading';\n\nexport default class Header extends Component {\n  constructor() {\n    super();\n    this.state = {\n      loginName: '',\n      load: true,\n    };\n    this.getUserAndRemoveLoad = this.getUserAndRemoveLoad.bind(this);\n  }\n\n  componentDidMount() {\n    this.getUserAndRemoveLoad();\n  }\n\n  async getUserAndRemoveLoad() {\n    await getUser().then(({ name }) => this.setState({\n      loginName: name,\n      load: false,\n    }));\n  }\n\n  render() {\n    const { loginName, load } = this.state;\n    return ((load) ? <Loading />\n      : (\n        <section data-testid=\"header-component\">\n          <Link to=\"/search\" data-testid=\"link-to-search\">\n            Buscar\n          </Link>\n          <Link to=\"/favorites\" data-testid=\"link-to-favorites\">\n            Favoritos\n          </Link>\n          <Link to=\"/profile\" data-testid=\"link-to-profile\">\n            Perfil\n          </Link>\n          <h2>Cabeçalho</h2>\n          <h2 data-testid=\"header-user-name\">{loginName}</h2>\n        </section>\n      )\n    );\n  }\n}\n","const getMusics = async (id) => {\n  const request = await fetch(`https://itunes.apple.com/lookup?id=${id}&entity=song`);\n  const requestJson = await request.json();\n  return requestJson.results;\n};\n\nexport default getMusics;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class MusicCard extends Component {\n  render() {\n    const {\n      trackId,\n      trackName,\n      previewUrl,\n      onHandleChange,\n      isChecked } = this.props;\n    // console.log(isChecked);\n    // console.log('rodou de novo');\n    // const { favoritesMusics } = this.state;\n    return (\n      <div>\n        <div>\n          <p>{ trackName }</p>\n          <audio data-testid=\"audio-component\" src={ previewUrl } controls>\n            <track kind=\"captions\" />\n            O seu navegador não suporta o elemento\n            <code>audio</code>\n          </audio>\n          <label htmlFor={ trackId }>\n            Favorita\n            <input\n              data-testid={ `checkbox-music-${trackId}` }\n              type=\"checkbox\"\n              name=\"track\"\n              checked={ isChecked }\n              id={ trackId }\n              onChange={ onHandleChange }\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nMusicCard.propTypes = {\n  trackId: PropTypes.number.isRequired,\n  trackName: PropTypes.string.isRequired,\n  previewUrl: PropTypes.string.isRequired,\n  isChecked: PropTypes.bool.isRequired,\n  onHandleChange: PropTypes.func.isRequired,\n};\n\n// MusicCard.defaultProps = {\n//   isChecked: null,\n// };\n","const FAVORITE_SONGS_KEY = 'favorite_songs';\nconst TIMEOUT = 500;\nconst SUCCESS_STATUS = 'OK';\n\nif (!JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY))) {\n  localStorage.setItem(FAVORITE_SONGS_KEY, JSON.stringify([]));\n}\nconst readFavoriteSongs = () => JSON.parse(localStorage.getItem(FAVORITE_SONGS_KEY));\n\nconst saveFavoriteSongs = (favoriteSongs) => localStorage\n  .setItem(FAVORITE_SONGS_KEY, JSON.stringify(favoriteSongs));\n\n// --------------------------------------------------------------------\n// A função simulateRequest simula uma requisição para uma API externa\n// Esse tipo de função que \"chama outra função\" é chamada de\n// \"currying function\" https://javascript.info/currying-partials\n// não se preocupe, estudaremos isso futuramente.\n// --------------------------------------------------------------------\n\nconst simulateRequest = (response) => (callback) => {\n  setTimeout(() => {\n    callback(response);\n  }, TIMEOUT);\n};\n\nexport const getFavoriteSongs = () => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  simulateRequest(favoriteSongs)(resolve);\n});\n\nexport const addSong = (song) => new Promise((resolve) => {\n  if (song) {\n    const favoriteSongs = readFavoriteSongs();\n    saveFavoriteSongs([...favoriteSongs, song]);\n  }\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n\nexport const removeSong = (song) => new Promise((resolve) => {\n  const favoriteSongs = readFavoriteSongs();\n  saveFavoriteSongs(favoriteSongs.filter((s) => s.trackId !== song.trackId));\n  simulateRequest(SUCCESS_STATUS)(resolve);\n});\n","import React, { Component } from 'react';\n\nimport Header from '../components/Header';\nimport getMusics from '../services/musicsAPI';\nimport MusicCard from '../components/MusicCard';\nimport { addSong, getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\nimport Loading from '../components/Loading';\n\nexport default class Album extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      load: false,\n      dataAlbum: [],\n      dataTracks: [],\n      favoritesMusics: [],\n    };\n    this.fetchMusics = this.fetchMusics.bind(this);\n    this.onHandleChangeChecked = this.onHandleChangeChecked.bind(this);\n    this.getFavorites = this.getFavorites.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchMusics();\n    this.getFavorites();\n  }\n\n  // https://stackoverflow.com/questions/42597602/react-onclick-pass-event-with-parameter\n\n  async onHandleChangeChecked(dataTrack) {\n    const { favoritesMusics } = this.state;\n    this.setState({ load: true });\n    if (favoritesMusics.some(({ trackId }) => trackId === dataTrack.trackId)) {\n      await removeSong(dataTrack);\n      // const indexMusic = favoritesMusics\n      //   .findIndex(({ trackId }) => trackId === dataTrack.trackId);\n      // const favMus = [...favoritesMusics];\n      // favMus.splice(indexMusic, 1);\n      // return (\n      //   this.setState({\n      //     favoritesMusics: [...favMus],\n      //   }));\n    } else {\n      await addSong(dataTrack);\n    }\n    await getFavoriteSongs().then((res) => this.setState(() => ({\n      favoritesMusics: res,\n    })));\n    this.setState({ load: false });\n  }\n  // includesInFavoritesMusics(id) {\n  //   const { favoritesMusics } = this.state;\n  //   favoritesMusics.some((trackId) => trackId === id);\n  // }\n\n  async getFavorites() {\n    this.setState({ load: true });\n    await getFavoriteSongs().then((result) => this.setState({\n      favoritesMusics: result,\n    }));\n    this.setState({\n      load: false,\n    });\n  }\n\n  // const { location: { query: { idCol } } } = this.props;\n  // https://www.codegrepper.com/code-examples/javascript/get+only+numbers+from+string+js\n  fetchMusics() {\n    const urlId = window.location.pathname;\n    const colId = urlId.replace(/[^0-9]/g, '');\n    getMusics(colId).then(([album, ...tracks]) => this.setState(\n      { dataAlbum: album,\n        dataTracks: tracks,\n      },\n    ));\n  }\n\n  // async addSongToFavorites() {\n  //   const { favoritesMusics, dataTracks } = this.state;\n  //   this.setState({ loading: true });\n  //   favoritesMusics.map((musicId) => {\n  //     const objMus = dataTracks.filter(({ trackId }) => trackId === musicId);\n  //     return addSong(objMus);\n  //   });\n  //   this.setState({ loading: false });\n  // }\n\n  renderTracks() {\n    const { dataAlbum } = this.state;\n    return (\n      <section className=\"sectionTracks\">\n        <div className=\"cardAlbum\">\n          <h2 data-testid=\"artist-name\">{ dataAlbum.artistName }</h2>\n          <p data-testid=\"album-name\">\n            { `Album: ${dataAlbum.collectionName}\n            Artista: ${dataAlbum.artistName}`}\n          </p>\n          <img\n            src={ dataAlbum.artworkUrl100 }\n            alt=\"Capa de album\"\n          />\n        </div>\n      </section>\n    );\n  }\n\n  // console.log(this.props.location.query.idCol);\n  // const { location: { query: { idCol } } } = this.props;\n  render() {\n    const { dataTracks, load, favoritesMusics } = this.state;\n    return (\n      <>\n        <Header />\n        <div data-testid=\"page-album\">\n          {this.renderTracks()}\n          { (load) ? <Loading /> : null }\n          {dataTracks.map((dataTrack) => {\n            const isChecked = favoritesMusics\n              .some((fav) => fav.trackId === dataTrack.trackId);\n            return (\n              <MusicCard\n                key={ dataTrack.trackId }\n                onHandleChange={ () => this.onHandleChangeChecked(dataTrack) }\n                isChecked={ isChecked }\n                trackId={ dataTrack.trackId }\n                trackName={ dataTrack.trackName }\n                previewUrl={ dataTrack.previewUrl }\n              />);\n          })}\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Header from '../components/Header';\nimport MusicCard from '../components/MusicCard';\nimport Loading from '../components/Loading';\nimport { getFavoriteSongs, removeSong } from '../services/favoriteSongsAPI';\n\nexport default class Favorites extends Component {\n  constructor() {\n    super();\n    this.state = {\n      load: false,\n      listFavorites: [],\n    };\n    this.getFavMusics = this.getFavMusics.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n  }\n\n  componentDidMount() {\n    this.getFavMusics();\n  }\n\n  async getFavMusics() {\n    this.setState({\n      load: true,\n    });\n    await getFavoriteSongs().then((results) => this.setState({\n      listFavorites: results,\n    }));\n    this.setState({\n      load: false,\n    });\n  }\n\n  async removeTrack(data) {\n    this.setState({\n      load: true,\n    });\n    await removeSong(data);\n    await this.getFavMusics();\n  }\n\n  render() {\n    const { load, listFavorites } = this.state;\n    return (\n      <>\n        <Header />\n        <div data-testid=\"page-favorites\">\n          <h2>Favoritos</h2>\n          {(load) ? <Loading /> : null}\n          {listFavorites.map((dataTrack) => {\n            const isChecked = true;\n            return (\n              <MusicCard\n                key={ dataTrack.trackId }\n                onHandleChange={ () => this.removeTrack(dataTrack) }\n                isChecked={ isChecked }\n                trackId={ dataTrack.trackId }\n                trackName={ dataTrack.trackName }\n                previewUrl={ dataTrack.previewUrl }\n              />);\n          })}\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\n\nexport default class NotFound extends Component {\n  render() {\n    return (\n      <div data-testid=\"page-not-found\">\n        <h2>Page was not found</h2>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport { getUser } from '../services/userAPI';\n\nexport default class Profile extends Component {\n  constructor() {\n    super();\n    this.state = {\n      load: false,\n      dataUsr: [],\n    };\n    this.fetchUser = this.fetchUser.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchUser();\n  }\n\n  async fetchUser() {\n    this.setState({ load: true });\n    await getUser().then((dataU) => this.setState({\n      dataUsr: dataU,\n    }));\n    this.setState({ load: false });\n  }\n\n  render() {\n    const { load, dataUsr } = this.state;\n    return (\n      <>\n        <Header />\n        <div data-testid=\"page-profile\">\n          {(load)\n            ? <Loading />\n            : (\n              <div className=\"cardProfile\">\n                <img\n                  src={ dataUsr.image }\n                  alt=\"Autorretrato do usuário\"\n                  data-testid=\"profile-image\"\n                />\n                <h2>Nome</h2>\n                <p>{ dataUsr.name }</p>\n                <h2>Email</h2>\n                <p>{ dataUsr.email }</p>\n                <h2>Descrição</h2>\n                <p>{ dataUsr.description }</p>\n                <Link to=\"/profile/edit\">Editar perfil</Link>\n              </div>\n            )}\n        </div>\n      </>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { Redirect } from 'react-router';\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport { getUser, updateUser } from '../services/userAPI';\n\nexport default class ProfileEdit extends Component {\n  constructor() {\n    super();\n    this.state = {\n      load: false,\n      name: '',\n      email: '',\n      description: '',\n      image: '',\n      disable: false,\n      updated: false,\n    };\n    this.fetchUsr = this.fetchUsr.bind(this);\n    this.onHandleChanger = this.onHandleChanger.bind(this);\n    this.isDisable = this.isDisable.bind(this);\n    this.onHandleClick = this.onHandleClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchUsr();\n  }\n\n  onHandleChanger({ target: { name, value } }) {\n    this.setState({\n      [name]: value,\n    });\n    this.isDisable();\n  }\n\n  async onHandleClick() {\n    const { name, email, image, description } = this.state;\n    this.setState({ load: true });\n    await updateUser({ name, email, image, description });\n    this.setState({ updated: true });\n  }\n\n  // https://stackoverflow.com/questions/46155/how-to-validate-an-email-address-in-javascript\n\n  isDisable() {\n    const { name, email, description, image } = this.state;\n    this.setState({\n      disable: ((name.length === 0)\n      || (email.length === 0)\n      || !(email.match(/\\S+@\\S+\\.\\S+/))\n      || (description.length === 0)\n      || (image.length === 0)),\n    });\n  }\n\n  async fetchUsr() {\n    this.setState({\n      load: true,\n    });\n    await getUser().then(({ name, email, description, image }) => this.setState({\n      name, email, description, image,\n    }));\n    this.setState({\n      load: false,\n    });\n  }\n\n  // isDisabled() {\n  //   const { usrData } = this.state;\n  // }\n\n  render() {\n    const { name, email, description, image, load, disable, updated } = this.state;\n    return (\n      <>\n        <Header />\n        <div data-testid=\"page-profile-edit\">\n          {(load) ? <Loading />\n            : (\n              <div className=\"form__profile\">\n                <h2>Profile Edit Page</h2>\n                <form>\n                  <label htmlFor=\"nameInput\">\n                    Nome\n                    <input\n                      id=\"nameInput\"\n                      name=\"name\"\n                      type=\"text\"\n                      value={ name }\n                      data-testid=\"edit-input-name\"\n                      onChange={ this.onHandleChanger }\n                    />\n                  </label>\n                  <label htmlFor=\"emailInput\">\n                    Email\n                    <input\n                      name=\"email\"\n                      id=\"emailInput\"\n                      type=\"email\"\n                      value={ email }\n                      onChange={ this.onHandleChanger }\n                      data-testid=\"edit-input-email\"\n                    />\n                  </label>\n                  <label htmlFor=\"descriptionInput\">\n                    Descrição\n                    <textarea\n                      name=\"description\"\n                      id=\"descriptionInput\"\n                      type=\"textarea\"\n                      value={ description }\n                      onChange={ this.onHandleChanger }\n                      data-testid=\"edit-input-description\"\n                    />\n                  </label>\n                  <label htmlFor=\"imageInput\">\n                    Imagem\n                    <input\n                      name=\"image\"\n                      id=\"imageInput\"\n                      type=\"text\"\n                      value={ image }\n                      onChange={ this.onHandleChanger }\n                      data-testid=\"edit-input-image\"\n                    />\n                  </label>\n                  <button\n                    type=\"submit\"\n                    data-testid=\"edit-button-save\"\n                    disabled={ disable }\n                    onClick={ this.onHandleClick }\n                  >\n                    Salvar\n                  </button>\n                </form>\n              </div>)}\n          { updated && <Redirect to=\"/profile\" exact />}\n        </div>\n      </>\n    );\n  }\n}\n","const searchAlbumsAPI = async (artist) => {\n  const artistNameURL = encodeURI(artist).replaceAll('%20', '+');\n\n  const getAlbumsAPI = `https://itunes.apple.com/search?entity=album&term=${artistNameURL}&attribute=allArtistTerm`;\n\n  const APIResponse = await fetch(getAlbumsAPI);\n\n  const { results } = await APIResponse.json();\n\n  const response = results.map(\n    ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }) => ({\n      artistId,\n      artistName,\n      collectionId,\n      collectionName,\n      collectionPrice,\n      artworkUrl100,\n      releaseDate,\n      trackCount,\n    }),\n  );\n  return response;\n};\n\nexport default searchAlbumsAPI;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Header from '../components/Header';\nimport Loading from '../components/Loading';\nimport searchAlbumsAPI from '../services/searchAlbumsAPI';\n\nexport default class Search extends Component {\n  constructor() {\n    super();\n    this.state = {\n      nameSearched: '',\n      searchInput: '',\n      load: false,\n      data: '',\n      request: false,\n    };\n    this.onHandleChanger = this.onHandleChanger.bind(this);\n    this.onHandleSearchClick = this.onHandleSearchClick.bind(this);\n    this.renderAlbums = this.renderAlbums.bind(this);\n  }\n  // componentDidMount() {\n  //   this.onHandleSearchClick();\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   this.s\n  // }\n\n  onHandleChanger(e) {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async onHandleSearchClick(e) {\n    const { searchInput } = this.state;\n    e.preventDefault();\n    this.setState({ load: true, nameSearched: searchInput });\n    await searchAlbumsAPI(searchInput)\n      .then((album) => this.setState({ data: album }));\n    this.setState({ load: false, request: true, searchInput: '' });\n  }\n\n  renderAlbums() {\n    const { data } = this.state;\n    return (data.length === 0) ? <p>Nenhum álbum foi encontrado</p>\n      : (\n        data.map((album) => (\n          <div key={ album.collectionId }>\n            <img src={ album.artworkUrl100 } alt={ album.collectionName } />\n            <h2>{ album.artistName }</h2>\n            <Link\n              to={ {\n                pathname: `/album/${album.collectionId}`,\n                query: { idCol: album.collectionId },\n              } }\n              data-testid={ `link-to-album-${album.collectionId}` }\n            >\n              { album.collectionName }\n            </Link>\n          </div>\n        )));\n  }\n\n  render() {\n    const { searchInput, load, nameSearched, request } = this.state;\n    const MINLETTER = 2;\n    return (\n      <>\n        <Header />\n        <div data-testid=\"page-search\">\n          <h2>Search Page</h2>\n          <form>\n            <input\n              type=\"text\"\n              data-testid=\"search-artist-input\"\n              placeholder=\"Nome do artista\"\n              name=\"searchInput\"\n              value={ searchInput }\n              onChange={ this.onHandleChanger }\n            />\n            <button\n              type=\"submit\"\n              data-testid=\"search-artist-button\"\n              disabled={ searchInput.length < MINLETTER }\n              onClick={ this.onHandleSearchClick }\n            >\n              Procurar\n            </button>\n          </form>\n          {(load) ? <Loading />\n            : (\n              <h2>\n                {`Resultado de álbuns de: ${nameSearched}`}\n              </h2>\n            )}\n          {(request) && this.renderAlbums() }\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n\nimport Login from '../pages/Login';\nimport Album from '../pages/Album';\nimport Favorites from '../pages/Favorites';\nimport NotFound from '../pages/NotFound';\nimport Profile from '../pages/Profile';\nimport ProfileEdit from '../pages/ProfileEdit';\nimport Search from '../pages/Search';\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route path=\"/search\" exact component={ Search } />\n      <Route path=\"/album/:id\" component={ Album } />\n      <Route path=\"/favorites\" component={ Favorites } />\n      <Route path=\"/profile\" exact component={ Profile } />\n      <Route path=\"/profile/edit\" exact component={ ProfileEdit } />\n      <Route path=\"/\" exact component={ Login } />\n      <Route path=\"*\" component={ NotFound } />\n    </Switch>\n  );\n}\n","import { ThemeProvider } from '@mui/material';\nimport React from 'react';\nimport Routes from './routes/Routes';\n\nclass App extends React.Component {\n  render() {\n    return (\n      <ThemeProvider>\n        <Routes />\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter basename=\"/trybetunes\">\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}